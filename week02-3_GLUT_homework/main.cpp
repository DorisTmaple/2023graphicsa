#include <GL/glut.h>
#include <math.h>
///week02-3_homework

void myCircle(float r, float x, float y){

    glBegin(GL_POLYGON);
        for(float a=0 ; a<2*3.1415962 ; a+=0.01){
            glVertex2f(r*cos(a)+x , r*sin(a)+y);
        }
    glEnd();

}



void display()
{
    glColor3f(228/255.0,228/255.0,228/255.0);
    glBegin(GL_POLYGON);
        glVertex2f(-1,1);
        glVertex2f(-1,-1);
        glVertex2f(1,-1);
        glVertex2f(1,1);
    glEnd();

    glColor3f(7/255.0,14/255.0,21/255.0);
    glBegin(GL_POLYGON);
        ///口訣：減一半、除一半、y變負號
        glVertex2f((83-100)/100.0,-(75-100)/100.0);
        glVertex2f((83-100)/100.0,-(27-100)/100.0);
        glVertex2f((116-100)/100.0,-(27-100)/100.0);
        glVertex2f((116-100)/100.0,-(75-100)/100.0);
    glEnd();





    glColor3f(7/255.0,14/255.0,21/255.0); myCircle(0.7, (100-100)/100.0,-(130-100)/100.0); ///black
    glColor3f(62/255.0,58/255.0,57/255.0); myCircle(0.67, (100-100)/100.0,-(130-100)/100.0);
    glColor3f(7/255.0,14/255.0,21/255.0); myCircle(0.46, (100-100)/100.0,-(130-100)/100.0);
    glColor3f(255/255.0,255/255.0,255/255.0); myCircle(0.44, (100-100)/100.0,-(130-100)/100.0); ///white
    glColor3f(7/255.0,14/255.0,21/255.0); myCircle(0.18, (100-100)/100.0,-(130-100)/100.0);
    glColor3f(255/255.0,255/255.0,255/255.0); myCircle(0.055, (105-100)/100.0,-(120-100)/100.0);


    glColor3f(7/255.0,14/255.0,21/255.0);/// 外圈
    glBegin(GL_POLYGON);
        ///口訣：減一半、除一半、y變負號

        glVertex2f((182-100)/100.0,-(27-100)/100.0);
        glVertex2f((185-100)/100.0,-(27-100)/100.0);
        glVertex2f((188-100)/100.0,-(26-100)/100.0);
        glVertex2f((191-100)/100.0,-(24-100)/100.0);
        glVertex2f((193-100)/100.0,-(22-100)/100.0);

        glVertex2f((195-100)/100.0,-(22-100)/100.0);
        glVertex2f((196-100)/100.0,-(21-100)/100.0);
        glVertex2f((197-100)/100.0,-(17-100)/100.0);
        glVertex2f((197-100)/100.0,-(14-100)/100.0);
        glVertex2f((197-100)/100.0,-(13-100)/100.0);

        glVertex2f((197-100)/100.0,-(11-100)/100.0);
        glVertex2f((196-100)/100.0,-(9-100)/100.0);
        glVertex2f((195-100)/100.0,-(8-100)/100.0);
        glVertex2f((193-100)/100.0,-(6-100)/100.0);
        glVertex2f((191-100)/100.0,-(5-100)/100.0);

        glVertex2f((189-100)/100.0,-(3-100)/100.0);
        glVertex2f((187-100)/100.0,-(3-100)/100.0);
        glVertex2f((185-100)/100.0,-(2-100)/100.0);
        glVertex2f((183-100)/100.0,-(2-100)/100.0);
        glVertex2f((180-100)/100.0,-(2-100)/100.0);

   /////-------------------下為左半邊-------------------------------------

        glVertex2f((18-100)/100.0,-(2-100)/100.0);
        glVertex2f((16-100)/100.0,-(4-100)/100.0);
        glVertex2f((14-100)/100.0,-(5-100)/100.0);
        glVertex2f((11-100)/100.0,-(7-100)/100.0);
        glVertex2f((9-100)/100.0,-(8-100)/100.0);

        glVertex2f((7-100)/100.0,-(10-100)/100.0);
        glVertex2f((5-100)/100.0,-(13-100)/100.0);
        glVertex2f((5-100)/100.0,-(15-100)/100.0);
        glVertex2f((5-100)/100.0,-(18-100)/100.0);
        glVertex2f((6-100)/100.0,-(20-100)/100.0);

        glVertex2f((7-100)/100.0,-(22-100)/100.0);
        glVertex2f((11-100)/100.0,-(23-100)/100.0);
        glVertex2f((13-100)/100.0,-(24-100)/100.0);
        glVertex2f((18-100)/100.0,-(26-100)/100.0);
        glVertex2f((22-100)/100.0,-(27-100)/100.0);

        glVertex2f((83-100)/100.0,-(27-100)/100.0);

    glEnd();

    glColor3f(62/255.0,58/255.0,57/255.0); ///內圈
    glBegin(GL_POLYGON);
        ///口訣：減一半、除一半、y變負號
        glVertex2f((85-100)/100.0,-(75-100)/100.0); /// x+2
        glVertex2f((85-100)/100.0,-(22-100)/100.0); /// x+2  y-5
        glVertex2f((114-100)/100.0,-(22-100)/100.0); /// x-2  y-5
        glVertex2f((114-100)/100.0,-(75-100)/100.0); /// x-2
    glEnd();





    glColor3f(62/255.0,58/255.0,57/255.0); ///內圈
    glBegin(GL_POLYGON);
        ///口訣：減一半、除一半、y變負號
        /// 內圈顏色y一律-+2
        glVertex2f((182-100)/100.0,-(25-100)/100.0);
        glVertex2f((185-100)/100.0,-(25-100)/100.0);
        glVertex2f((188-100)/100.0,-(24-100)/100.0);
        glVertex2f((191-100)/100.0,-(22-100)/100.0);
        glVertex2f((193-100)/100.0,-(20-100)/100.0);

        glVertex2f((193-100)/100.0,-(20-100)/100.0);  ///-x y-2
        glVertex2f((194-100)/100.0,-(19-100)/100.0);  ///-x y-2
        glVertex2f((195-100)/100.0,-(17-100)/100.0); /// x-2
        glVertex2f((195-100)/100.0,-(14-100)/100.0);  /// x-2
        glVertex2f((195-100)/100.0,-(13-100)/100.0);  /// x-2

        glVertex2f((195-100)/100.0,-(11-100)/100.0);  /// x-2
        glVertex2f((195-100)/100.0,-(11-100)/100.0);  /// x-1 y+2
        glVertex2f((194-100)/100.0,-(10-100)/100.0);  /// x-1 y+2
        glVertex2f((193-100)/100.0,-(8-100)/100.0);
        glVertex2f((191-100)/100.0,-(7-100)/100.0);

        glVertex2f((189-100)/100.0,-(5-100)/100.0);
        glVertex2f((187-100)/100.0,-(5-100)/100.0);
        glVertex2f((185-100)/100.0,-(4-100)/100.0);
        glVertex2f((183-100)/100.0,-(4-100)/100.0);
        glVertex2f((180-100)/100.0,-(4-100)/100.0);

   /////-------------------下為左半邊-------------------------------------

        glVertex2f((18-100)/100.0,-(4-100)/100.0);
        glVertex2f((16-100)/100.0,-(6-100)/100.0);
        glVertex2f((14-100)/100.0,-(7-100)/100.0);
        glVertex2f((11-100)/100.0,-(9-100)/100.0);
        glVertex2f((9-100)/100.0,-(10-100)/100.0);

        glVertex2f((8-100)/100.0,-(12-100)/100.0); /// x+1
        glVertex2f((7-100)/100.0,-(13-100)/100.0); /// x+2
        glVertex2f((7-100)/100.0,-(15-100)/100.0); /// x+2
        glVertex2f((7-100)/100.0,-(18-100)/100.0); /// x+2
        glVertex2f((7-100)/100.0,-(18-100)/100.0); /// x+1 y-2

        glVertex2f((8-100)/100.0,-(20-100)/100.0); /// x+1 y-2
        glVertex2f((11-100)/100.0,-(21-100)/100.0);
        glVertex2f((13-100)/100.0,-(22-100)/100.0);
        glVertex2f((18-100)/100.0,-(24-100)/100.0);
        glVertex2f((22-100)/100.0,-(25-100)/100.0);

        glVertex2f((83-100)/100.0,-(25-100)/100.0);

    glEnd();

    glutSwapBuffers();

}

int main(int argc, char *argv[])
{
    glutInit(&argc, argv);///開啟GLUT
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);
    ///設定顯示模式
    glutCreateWindow("GLUT Shapes");///開視窗
    glutDisplayFunc(display);///要顯示的對應函示"display()"
   glutMainLoop();/// 壓最後
}
